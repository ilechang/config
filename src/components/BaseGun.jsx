/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/basegun.glb -o src/components/BaseGun.jsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { useCustomization } from "../contexts/Customization";

useGLTF.preload("/models/basegun.glb");

export function BaseGun(props) {
  const { nodes, materials } = useGLTF("/models/basegun.glb");
  const frameOptic = useGLTF("/models/framemountedoptic.glb");
  const chargingHandle = useGLTF("/models/charginghandle.glb");
  const slideOptic = useGLTF("/models/rmr.glb");
  const comp = useGLTF("/models/comp.glb");
  const magwell = useGLTF("/models/magwell.glb");
  const thumbrest = useGLTF("/models/thumbrest.glb");

  const {
    slideColor,
    compColor,
    magwellColor,
    opticType,
    thumbrestColor,
  } = useCustomization();



  return (
    <group {...props} dispose={null}>

      {/* ----- Basegun 主體 ----- */}
      <group position={[0.003, -0.022, 0.022]} rotation={[-2.749, 1.569, 1.178]}>
        <mesh geometry={nodes.Mesh_11.geometry} material={materials["black metal.001"]} />
        <mesh geometry={nodes.Mesh_11_1.geometry} material={materials.grip} />
      </group>

      <mesh geometry={nodes["右拇指保險-1"].geometry} material={materials["silver metal"]} position={[0.003, -0.023, 0.022]} rotation={[1.916, 0, 1.569]} />
      <mesh geometry={nodes["槍膛-2001"].geometry} material={materials["silver metal"]} position={[0, -0.002, 0.009]} rotation={[-3.141, 0, -Math.PI]} />
      <mesh geometry={nodes["準心光纖-1001"].geometry} material={materials["color-11"]} position={[0, 0.013, -0.115]} rotation={[0, 0, 2.15]} />
      <mesh geometry={nodes["準心座-1001"].geometry} material={materials["black metal.001"]} position={[0.002, 0.019, -0.1]} rotation={[1.571, 0, Math.PI / 2]} />
      <mesh geometry={nodes["照門飛機座螺絲-1001"].geometry} material={materials["black metal"]} position={[0, 0.01, 0.054]} rotation={[0, -1.436, 0]} />
      <mesh geometry={nodes["覆進導桿座-1001"].geometry} material={materials["silver metal"]} position={[0, -0.018, -0.017]} rotation={[1.571, -1.33, Math.PI]} />
      <mesh geometry={nodes["飛機座尾部固定螺絲-1"].geometry} material={materials["light grey high gloss plastic"]} position={[0, 0.001, 0.065]} rotation={[-1.571, -0.392, Math.PI / 2]} />
      <mesh geometry={nodes["彈匣釋放紐-1001"].geometry} material={materials["black metal"]} position={[0, -0.141, -0.321]} rotation={[-0.262, Math.PI / 2, 0]} />
      <mesh geometry={nodes["扳機-1001"].geometry} material={materials["silver metal"]} position={[0, -0.051, 0.031]} rotation={[0, 1.571, 0]} />
      <mesh geometry={nodes["擊錘簧座PIN-1"].geometry} material={materials["black metal"]} position={[0.013, -0.112, 0.089]} rotation={[0, 0, -Math.PI]} />
      <mesh geometry={nodes["中段握把大扁頭螺絲-2001"].geometry} material={materials["silver metal"]} position={[0.014, -0.029, 0.041]} rotation={[0, 0, -Math.PI]} />

      <group position={[0, -0.015, -0.075]} rotation={[-3.141, 1.571, 0]}>
        <mesh geometry={nodes.Mesh_6001.geometry} material={materials["color-11"]} />
        <mesh geometry={nodes.Mesh_6001_1.geometry} material={materials["black metal"]} />
      </group>

      <mesh geometry={nodes["中段左片-1001"].geometry} material={materials["black metal"]} position={[0.02, -0.015, -0.075]} rotation={[-3.141, 1.571, 0]} />
      <mesh geometry={nodes["司牙PIN-1001"].geometry} material={materials["silver metal"]} position={[0.01, -0.026, 0.06]} rotation={[2.252, -Math.PI / 2, 0]} />
      <mesh geometry={nodes["擊錘簧連桿-1"].geometry} material={materials["black metal"]} position={[0.001, -0.068, 0.073]} rotation={[-1.793, -1.571, 0]} />
      <mesh geometry={nodes["擊錘連桿咬花PIN-1"].geometry} material={materials.Material_0} position={[-0.003, -0.018, 0.075]} rotation={[-1.4, Math.PI / 2, 0]} />
      <mesh geometry={nodes["鋼製擊錘-1001"].geometry} material={materials["silver metal"]} position={[-0.049, -0.003, 0.068]} rotation={[3.064, 0, 0]} />
      <mesh geometry={nodes["擊錘簧座_預設stp-1"].geometry} material={materials["black metal.041"]} position={[-0.099, -0.031, 0.059]} rotation={[-1.886, 0, 0]} />

      {/* ----- Slide 顏色控制 ----- */}
      <mesh geometry={nodes.滑套.geometry} position={[0.003, -0.022, 0.022]} rotation={[0, 0, -3.133]}>
        {slideColor === "black" ? (
          <primitive object={materials["black metal.002"]} attach="material" />
        ) : slideColor === "gold" ? (
          <meshStandardMaterial color="#FFD700" metalness={1} roughness={0.2} />
        ) : slideColor === "red" ? (
          <meshStandardMaterial color="#FF0000" metalness={1} roughness={0.2} />
        ) : (
          <meshStandardMaterial color="#C0C0C0" metalness={1} roughness={0.2} />
        )}
      </mesh>

      <mesh geometry={nodes.slide_stop.geometry} material={materials["silver metal.001"]} position={[0.01, 0.011, -0.115]} rotation={[-3.141, -1.571, 0]} />

      {/* ----- Compensator 控制 ----- */}
      {compColor !== "none" && (
        <group>
          {comp.scene.children.map((child, i) => (
            child.isMesh && (
              <mesh key={i} geometry={child.geometry} position={child.position} rotation={child.rotation} scale={child.scale}>
                {compColor === "black" ? (
                  <primitive object={child.material} attach="material" />
                ) : compColor === "gold" ? (
                  <meshStandardMaterial color="#FFD700" metalness={1} roughness={0.2} />
                ) : compColor === "silver" ? (
                  <meshStandardMaterial color="#C0C0C0" metalness={1} roughness={0.3} />
                ) : (
                  <meshStandardMaterial color="red" metalness={1} roughness={0.2} />
                )}
              </mesh>
            )
          ))}
        </group>
      )}

      {/* ----- Optic 選擇 ----- */}
      {opticType === "none" && (
        <mesh geometry={nodes.照門.geometry} material={materials["black metal.009"]} position={[0.003, -0.022, 0.022]} rotation={[-1.571, 0.008, -1.57]} />
      )}
      {opticType === "frame" && (
        <>
          <primitive object={frameOptic.scene.clone()} />
          <primitive object={chargingHandle.scene.clone()} />
        </>
      )}
      {opticType === "slide" && <primitive object={slideOptic.scene.clone()} />}

      {/* ----- Magwell 控制 ----- */}
      {magwellColor !== "none" && (
        <group>
          {magwell.scene.children.map((child, i) => (
            child.isMesh && (
              <mesh key={i} geometry={child.geometry} position={child.position} rotation={child.rotation} scale={child.scale}>
                {["silver", "black"].includes(magwellColor) ? (
                  <primitive object={child.material} attach="material" />
                ) : (
                  <meshStandardMaterial color={magwellColor === "gold" ? "#FFD700" : "#FF0000"} metalness={1} roughness={0.2} />
                )}
              </mesh>
            )
          ))}
        </group>
      )}

      {/* ----- Thumbrest 控制 ----- */}
      {thumbrestColor !== "none" && (
        <group>
          {thumbrest.scene.children.map((child, i) => (
            child.isMesh && (
              <mesh key={i} geometry={child.geometry} position={child.position} rotation={child.rotation} scale={child.scale}>
                {["silver", "black"].includes(thumbrestColor) ? (
                  <primitive object={child.material} attach="material" />
                ) : (
                  <meshStandardMaterial color={thumbrestColor === "gold" ? "#FFD700" : "#FF0000"} metalness={1} roughness={0.2} />
                )}
              </mesh>
            )
          ))}
        </group>
      )}

    </group>
  );
}


